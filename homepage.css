/* homepage.css */
@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600;700&display=swap');

:root {
  --primary-dark: #2A4C6B; /* Darker blue for header/footer */
  --primary-light: #5B7FA5; /* Lighter blue for accents */
  --text-dark: #2c3e50; /* Darker text for readability */
  --text-light: #ecf0f1; /* Light text for dark backgrounds */
  --bg-gradient-start: #dbe4ee; /* Light blue-grey */
  --bg-gradient-end: #a3bded; /* Muted blue */
  --panel-bg-rgba: rgba(255, 255, 255, 0.15); /* For glassmorphism */
  --panel-border-rgba: rgba(255, 255, 255, 0.3); /* For glassmorphism */
  --panel-shadow: rgba(0, 0, 0, 0.1);
  --panel-hover-shadow: rgba(0, 0, 0, 0.2);
}

/* 1. CRITICAL for making the page scrollable */
html, body {
  margin: 0;
  padding: 0;
  height: 100%; /* Ensures html and body fill the viewport */
  overflow-x: hidden; /* Prevent horizontal scroll, unless specifically desired */
  overflow-y: auto;   /* Allow vertical scroll when content overflows */
}

/* If you are rendering your React app into a div with id="root" in your index.html */
#root {
  height: 100%; /* Make sure #root also takes full height */
}


.homepage-container {
  display: flex;
  flex-direction: column;
  min-height: 100vh; /* Ensures it's at least viewport height, allowing it to grow */
  font-family: 'Poppins', sans-serif; /* Modern font */
  background: linear-gradient(135deg, var(--bg-gradient-start) 0%, var(--bg-gradient-end) 100%); /* Gradient background */
  color: var(--text-dark);
  /* DO NOT set overflow: hidden; here if you want the container to scroll.
     Let the body's overflow: auto; handle it, or apply overflow to a specific
     child section if only that child should scroll. */
}

.main-header {
  background: var(--primary-dark);
  color: var(--text-light);
  padding: 3rem 2rem;
  text-align: center;
  box-shadow: 0 4px 15px var(--panel-shadow);
  position: relative;
  z-index: 10;
  animation: fadeInDown 1s ease-out;
  flex-shrink: 0; /* Prevents header from shrinking below its content */
}

.main-header h1 {
  margin: 0;
  font-size: 3.5rem;
  font-weight: 700;
  letter-spacing: 2px;
  text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
}

.main-header p {
  font-size: 1.4rem;
  margin-top: 0.8rem;
  font-weight: 300;
  opacity: 0.9;
}

.panels-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  gap: 2.5rem;
  padding: 4rem;
  flex-grow: 1; /* This is key for allowing content to push the footer down and enable scroll */
  align-items: center;
  justify-content: center;
  position: relative;
  z-index: 5;
  /* If ONLY this section should scroll, and header/footer remain fixed,
     you would give this a specific height (e.g., max-height: calc(100vh - [header+footer height]));
     and then add overflow-y: auto; here. But for full page scroll, the body approach is simpler. */
}

.panel {
  background: var(--panel-bg-rgba);
  backdrop-filter: blur(15px);
  -webkit-backdrop-filter: blur(15px);
  border: 1px solid var(--panel-border-rgba);
  border-radius: 20px;
  padding: 2rem;
  box-shadow: 0 8px 32px var(--panel-shadow);
  cursor: pointer;
  transition: transform 0.4s cubic-bezier(0.25, 0.8, 0.25, 1), box-shadow 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
}

.panel:hover {
  transform: translateY(-12px) scale(1.02);
  box-shadow: 0 16px 40px var(--panel-hover-shadow);
}

.panel-icon {
  font-size: 3.5rem;
  margin-bottom: 1rem;
  transition: transform 0.3s ease;
}

.panel:hover .panel-icon {
  transform: rotate(5deg) scale(1.1);
}

.panel h2 {
  margin-top: 0.5rem;
  font-size: 1.8rem;
  font-weight: 600;
  color: var(--primary-dark);
  line-height: 1.3;
}

.panel p {
  font-size: 1.1rem;
  margin-top: 0.8rem;
  line-height: 1.6;
  color: var(--text-dark);
  opacity: 0.85;
}

.main-footer {
  background: var(--primary-dark);
  color: var(--text-light);
  text-align: center;
  padding: 1.5rem;
  flex-shrink: 0; /* Prevents footer from shrinking below its content */
  font-size: 0.9rem;
  opacity: 0.9;
  position: relative;
  z-index: 10;
}

/* Responsive Adjustments */
@media (max-width: 768px) {
  .main-header {
    padding: 2rem 1rem;
  }
  .main-header h1 {
    font-size: 2.5rem;
  }

  .main-header p {
    font-size: 1rem;
  }

  .panels-grid {
    padding: 2rem;
    gap: 1.5rem;
  }

  .panel h2 {
    font-size: 1.5rem;
  }

  .panel p {
    font-size: 0.95rem;
  }
}

@media (max-width: 480px) {
  .main-header {
    padding: 2rem 1rem;
  }

  .main-header h1 {
    font-size: 2rem;
  }

  .main-header p {
    font-size: 0.9rem;
  }

  .panels-grid {
    padding: 1.5rem;
  }
}

/* Keyframe Animations */
@keyframes fadeInDown {
  from {
    opacity: 0;
    transform: translateY(-20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}
